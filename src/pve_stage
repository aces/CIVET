#!/usr/bin/env perl
#

# These stages will calculate the partial volumes in each voxel. This
# essentially means that the volume will be classified 'continuously' instead of
# 'discretely'. Therefore, for each voxel, there will be a percentage of gray
# matter, white matter, CSF, and background, depending both on the voxel's
# intensity and on the neighboring voxels' intensities. This is especially
# useful information when examining voxels that lie on, or cross the boundary
# between tissue types (e.g. voxels around the pial surface of the cortex). This
# will be important for later stages that attempt to accurately produce the
# cortical surfaces. In addition, a 'skeletonized CSF' will be produced: A
# continuous layer of CSF surrounding the pial surface of the cortex. This will
# also be a requisite to produce cortical surfaces.

use strict;
use warnings "all";
# use File::Basename;
# use Math::BigFloat;

# define input variables:

my $inputType=$ARGV[0];
my $t1_tal_mnc=$ARGV[1];
my $t2_tal_mnc=$ARGV[2];
my $pd_tal_mnc=$ARGV[3];
my $t1_tal_xfm=$ARGV[4];
my $cls_masked=$ARGV[5];
my $mask=$ARGV[6];
my $maskD=$ARGV[7];
my $pve_curve_prefix=$ARGV[8];
my $pve_prefix=$ARGV[9];
my $pve_curvature=$ARGV[10];
my $pve_sc=$ARGV[11];
my $pve_wm=$ARGV[12];
my $pve_gm=$ARGV[13];
my $pve_csf=$ARGV[14];
my $cls_correct=$ARGV[15];
my $skel_csf=$ARGV[16];
my $cls_four=$ARGV[17];
my $cls_volumes=$ARGV[18];


&run( "pve_curvature", "-clobber", $t1_tal_mnc, $cls_masked, $maskD, $pve_curve_prefix );

if ($inputType eq "t1only") {
  &run( "pve_script", "-clobber", "-curve", $pve_curvature, "-subcortical",
        "-mask", $maskD, "-image", $cls_masked, $t1_tal_mnc, $pve_prefix );
} elsif ($inputType eq "multispectral") {
  &run( "pve_script", "-clobber", "-curve", $pve_curvature, "-subcortical",
        "-mask", $maskD, "-image", $cls_masked, $t1_tal_mnc, $t2_tal_mnc, 
        $pd_tal_mnc, $pve_prefix );
}

# Rebinarize PVE maps: Create cls_correct from pve_csf, pve_wm, pve_gm and pve_sc.

&run( "discretize_pve", "-clobber", $pve_csf, $pve_wm, $pve_gm, $pve_sc,
      $cls_correct );

#  Get rid of hanging white/gray voxels that might have been added in the
#  region created by dilate_volume in the masking step. The dilation also
#  includes extra voxels in the region of the cerebellum. In the region of
#  the non-dilated mask, take the original classification without defrag.
#  Also apply same mask to pve files as well (add all to csf, ignore pve_sc).
#  NOTE: $cls_correct, $pve_wm, $pve_gm, $pve_csf are both inputs and outputs.

&run( "pve_defrag", $cls_correct, $mask, $maskD, $pve_wm, $pve_gm, $pve_csf );

# create skeleton of CSF.

&run( "skel", $pve_csf, $skel_csf );

# Create a 4 class tissue classification, combining sub-cortical gray into white. 

&run( "minccalc", "-clobber", "-expression",
      'if (A[0] > 3.5 && A[0] < 4.5) { out = 2; } else { out = A[0]; }',
      $cls_correct, $cls_four );

# compute tissue volumes in native space

&run( "compute_icbm_vols", "-clobber", "-transform", $t1_tal_xfm,
      "-invert", $cls_four, $cls_volumes );


#Execute a system call.

sub run {
  print "@_\n";
  system(@_)==0 or die "Command @_ failed with status: $?";
}

