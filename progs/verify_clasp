#!/usr/bin/env perl

# Plot the surfaces in 3D.

use strict;
use warnings "all";
use File::Temp qw/ tempdir /;

my ($gray_left, $gray_right, $white_left, $white_right, $output, $title) = @ARGV;
unless($output) {
  print "Usage: $0 <gray_left.obj> <gray_right.obj> <white_left.obj> <white_right.obj> <output.png> [title]\n";
  print "Note that none of the inputs may be compressed!\n";
  exit(1);
}

my $tmpdir = tempdir( CLEANUP => 1 );
my $tilesize = 200;
my $debug = 0;
my $quiet = 1;
my @mont_args = ();

$title = "CLASP surfaces" unless defined $title;

# ROW 1: white left hemi surfaces + white top and bottom views
foreach my $pos ('default', 'left', 'right') {
  print "Making left white ${pos} surface\n" unless $quiet;
  make_hemi($white_left, "${tmpdir}/white_left_$pos.rgb", $pos);
  push(@mont_args, "${tmpdir}/white_left_$pos.rgb");
}
foreach my $pos ('top', 'bottom') {
  print "Making left/right white ${pos} surface\n" unless $quiet;
  make_surface( $white_left, $white_right, "${tmpdir}/white_${pos}.rgb", $pos );
  push(@mont_args, "${tmpdir}/white_${pos}.rgb");
}

# ROW 2: white right hemi surfaces + white front and back views
foreach my $pos ('default', 'right', 'left') {
  print "Making right white ${pos} surface\n" unless $quiet;
  make_hemi($white_right, "${tmpdir}/white_right_$pos.rgb", $pos);
  push(@mont_args, "${tmpdir}/white_right_$pos.rgb");
}
foreach my $pos ('front', 'back') {
  print "Making left/right white ${pos} surface\n" unless $quiet;
  make_surface( $white_left, $white_right, "${tmpdir}/white_${pos}.rgb", $pos );
  push(@mont_args, "${tmpdir}/white_${pos}.rgb");
}

# ROW 3: gray left hemi surfaces + gray top and bottom views
foreach my $pos ('default', 'left', 'right') {
  print "Making left gray ${pos} surface\n" unless $quiet;
  make_hemi($gray_left, "${tmpdir}/gray_left_$pos.rgb", $pos);
  push(@mont_args, "${tmpdir}/gray_left_$pos.rgb");
}
foreach my $pos ('top', 'bottom') {
  print "Making left/right gray ${pos} surface\n" unless $quiet;
  make_surface( $gray_left, $gray_right, "${tmpdir}/gray_${pos}.rgb", $pos );
  push(@mont_args, "${tmpdir}/gray_${pos}.rgb");
}

# ROW 4: gray right hemi surfaces + gray front and back views
foreach my $pos ('default', 'right', 'left') {
  print "Making right gray ${pos} surface\n" unless $quiet;
  make_hemi($gray_right, "${tmpdir}/gray_right_$pos.rgb", $pos);
  push(@mont_args, "${tmpdir}/gray_right_$pos.rgb");
}
foreach my $pos ('front', 'back') {
  print "Making left/right gray ${pos} surface\n" unless $quiet;
  make_surface( $gray_left, $gray_right, "${tmpdir}/gray_${pos}.rgb", $pos );
  push(@mont_args, "${tmpdir}/gray_${pos}.rgb");
}

# do the montage
print "Making montage\n" unless $quiet;
my $cmd = "montage -tile 5x4 -background grey10 -geometry ${tilesize}x${tilesize}+1+1 " .
	 join(' ', @mont_args)." ${tmpdir}/mont.png";
print "$cmd\n" if $debug; `$cmd`;


# Add the title
print "Adding title\n" unless $quiet;
$cmd = "convert -box white -font 7x13bold -draw 'text 2,15 \"${title}\"' ${tmpdir}/mont.png ${output}";
print "$cmd\n" if $debug; `$cmd`;

print "Done\n" unless $quiet;

# end of function

sub make_hemi {
  my ($surface, $temp_output, $pos) = @_;
  
  my $cmd = "";
  my $viewdir = "";
  if ($pos eq 'default') {
    $viewdir = "";
  } else {
    $viewdir = "-$pos";
  }

  $cmd = "ray_trace -shadows -output ${temp_output} ${surface} -bg white -crop ${viewdir}";
  print "$cmd\n" if $debug; `$cmd`;
}

sub make_surface {
  my ($left_hemi, $right_hemi, $temp_output, $pos) = @_;
  
  my $cmd = "";
  my $viewdir = "";
  if ($pos eq 'default') {
    $viewdir = "";
  } else {
    $viewdir = "-$pos";
  }

  $cmd = "ray_trace -shadows -output ${temp_output} ${left_hemi} ${right_hemi} -bg white -crop ${viewdir}";
  print "$cmd\n" if $debug; `$cmd`;
}



